{"name":"android-logger","tagline":"Useful logger for Android based on standard android.util.Log class. Simple lightweight (< 50 Kb) implementation of SLF4J API. Easy but powerful configuration via properties file and some additional helpful logging methods. Easy analogue of popular log4j library.","body":"Android Logger\r\n==============\r\n\r\nUseful logger for Android based on standard android.util.Log class.\r\nSimple lightweight (< 50 Kb) implementation of SLF4J API. Easy but powerful\r\nconfiguration via properties file and some additional helpful logging methods.\r\nEasy analogue of popular log4j library.\r\n\r\n__Android SDK Version__: API 7 [ Android 2.1 ]\r\n\r\n__Code Samples__: [[here]](https://github.com/noveogroup/android-logger/tree/sample)\r\n\r\nDownloads\r\n---------\r\n\r\n - [android-logger-1.2.3.jar](https://github.com/noveogroup/android-logger/blob/gh-downloads/android-logger-1.2.3.jar?raw=true)\r\n - [android-logger-1.2.3-sources.jar](https://github.com/noveogroup/android-logger/blob/gh-downloads/android-logger-1.2.3-sources.jar?raw=true)\r\n - [android-logger-1.2.3-javadoc.jar](https://github.com/noveogroup/android-logger/blob/gh-downloads/android-logger-1.2.3-javadoc.jar?raw=true)\r\n\r\n[Previous versions](https://github.com/noveogroup/android-logger/tree/gh-downloads)\r\n\r\nMaven Dependency\r\n----------------\r\n\r\n    <dependency>\r\n        <groupId>com.noveogroup.android</groupId>\r\n        <artifactId>android-logger</artifactId>\r\n        <version>1.2.3</version>\r\n    </dependency>\r\n\r\nGradle Dependency\r\n-----------------\r\n\r\n    'com.noveogroup.android:android-logger:1.2.3'\r\n\r\nForks\r\n-----\r\n\r\n - [jromero/android-logger](https://github.com/jromero/android-logger).\r\n   Logging tags can be generated automatically using logger name.\r\n\r\nGetting Started\r\n---------------\r\n\r\nIf you want to use Android Logger in your Android application you need to do\r\njust the following simple steps:\r\n\r\n - Add Android Logger as a library OR add it as Maven or Gradle dependency.\r\n\r\n - Configure Android Logger.\r\n\r\nPlace the following android-logger.properties file to your source directory (src/android-logger.properties):\r\n\r\n    # Android Logger configuration example\r\n    \r\n    # By default logger will print only ERROR (and higher) messages\r\n    # with \"MyApplication\" tag\r\n    root=ERROR:MyApplication\r\n    \r\n    # DEBUG (and higher) messages from classes of com.example.database\r\n    # will be logged with \"MyApplication-Database\" tag\r\n    logger.com.example.database=DEBUG:MyApplication-Database\r\n    \r\n    # All messages from classes of com.example.ui will be logged with\r\n    # \"MyApplication-UI\" tag\r\n    logger.com.example.ui=MyApplication-UI\r\n\r\nThe configuration manages which log tag will be used to print messages and\r\nwhich logging level filter will be applied.\r\n\r\n\r\n    logger.<package/classname>=<level>:<tag>:<message head>\r\n    # or\r\n    logger.<package/classname>=<level>:<tag>\r\n    # or\r\n    logger.<package/classname>=<tag>\r\n\r\nThe rest of messages will be managed by root logger:\r\n\r\n    root=<level>:<tag>:<message head>\r\n    # or\r\n    root=<level>:<tag>\r\n    # or\r\n    root=<tag>\r\n\r\nYou can use VERBOSE, DEBUG, INFO, WARN, ERROR, ASSERT as level in\r\nconfiguration files.\r\n\r\n - You need to get logger instance to print messages\r\n\r\nYou can use LoggerManager to get a logger instance to print messages.\r\n\r\n    package com.example.ui;\r\n\r\n    import com.noveogroup.android.log.Logger;\r\n    import com.noveogroup.android.log.LoggerManager;\r\n\r\n    public class MainActivity extends Activity {\r\n\r\n      // get a logger instance by name\r\n      private static final Logger logger = LoggerManager.getLogger(\"com.example.ui.MyActivity\");\r\n      // get a logger instance by class\r\n      private static final Logger logger = LoggerManager.getLogger(MainActivity.class);\r\n      // just to use current class\r\n      private static final Logger logger = LoggerManager.getLogger();\r\n\r\n      private void foo(int value) {\r\n        logger.i(\"entered MainActivity::foo value=%d\", value);\r\n        \r\n        try {\r\n          // some code\r\n        } catch(IOException e) {\r\n          logger.e(\"I/O error occurred\", e);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n - You can use Log class to make logging calls shorter.\r\n\r\nAny call like Log.someMethod() is equal to LoggerManager.getLogger().someMethod().\r\nSo, there will be some additional overhead to get a logger each time.\r\n\r\n    import static com.noveogroup.android.log.Log;\r\n\r\n    public class Bar {\r\n\r\n      public void foo() {\r\n        Log.i(\"some log message\");\r\n      }\r\n\r\n    }\r\n\r\nSLF4J compatibility\r\n-------------------\r\n\r\nAndroid Logger is SLF4J compatible. For example, you can write such code in\r\nyour library:\r\n\r\n    import org.slf4j.Logger;\r\n    import org.slf4j.LoggerFactory;\r\n\r\n    public class Bar {\r\n\r\n      private static final Logger logger = LoggerFactory.getLogger(Bar.class);\r\n\r\n      public void foo(int value) {\r\n        logger.info(\"entered Bar::foo value={}\", value);\r\n\r\n        try {\r\n          // some code\r\n        } catch(IOException e) {\r\n          logger.error(\"I/O error occurred\", e);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\nSuppose you compiled your library as JAR-file and publish it. After that anyone\r\nwho uses your JAR library will be able to add any SLF4J implementation to\r\nchange the way how the library logs messages.\r\nThe most powerful implementation of SLF4J is [LOGBack](http://logback.qos.ch/)\r\navailable for Android. Unfortunately, it has about 1 Mb size and it may be\r\ncritical for some Android applications.\r\nAndroid Logger is SLF4J compatible too. So you can just add its JAR as\r\na library to get all your log messages in Android LogCat.\r\n\r\nDeveloped By\r\n============\r\n\r\n* [Noveo Group][1]\r\n* Pavel Stepanov - <pstepanov@noveogroup.com>\r\n* Margarita Kurushina - <mkurushina@noveogroup.com>\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright (c) 2013 Noveo Group\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in\r\n    all copies or substantial portions of the Software.\r\n\r\n    Except as contained in this notice, the name(s) of the above copyright holders\r\n    shall not be used in advertising or otherwise to promote the sale, use or\r\n    other dealings in this Software without prior written authorization.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    THE SOFTWARE.\r\n\r\n[1]: http://noveogroup.com/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}